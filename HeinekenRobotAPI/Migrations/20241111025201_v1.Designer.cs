// <auto-generated />
using System;
using HeinekenRobotAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HeinekenRobotAPI.Migrations
{
    [DbContext(typeof(HeinekenRobotDBContext))]
    [Migration("20241111025201_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HeinekenRobotAPI.Entities.Campaign", b =>
                {
                    b.Property<Guid>("CampaignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CampaignName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CampaignId");

                    b.HasIndex("RegionId");

                    b.ToTable("Campaign", (string)null);
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.CampaignRobotMachine", b =>
                {
                    b.Property<Guid>("CampaignRobotMachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecycleMachineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RobotId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CampaignRobotMachineId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("LocationId");

                    b.HasIndex("RecycleMachineId");

                    b.HasIndex("RobotId");

                    b.ToTable("CampaignRobotMachine", (string)null);
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.Customer", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PointsBalance")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.Gift", b =>
                {
                    b.Property<Guid>("GiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpiredCount")
                        .HasColumnType("int");

                    b.Property<string>("GiftName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RedeemedCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalCount")
                        .HasColumnType("int");

                    b.HasKey("GiftId");

                    b.ToTable("Gift", (string)null);
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.GiftRedemption", b =>
                {
                    b.Property<Guid>("GiftRedemptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GiftId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("QrCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RedeemedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RedemptionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GiftRedemptionId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("GiftId");

                    b.HasIndex("UserId");

                    b.ToTable("GiftRedemption", (string)null);
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.Location", b =>
                {
                    b.Property<Guid>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Latitude")
                        .HasPrecision(9, 6)
                        .HasColumnType("decimal(9,6)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Longitude")
                        .HasPrecision(9, 6)
                        .HasColumnType("decimal(9,6)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LocationId");

                    b.HasIndex("RegionId");

                    b.ToTable("Location", (string)null);
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.RecycleMachine", b =>
                {
                    b.Property<Guid>("RecycleMachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContainerStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastServiceDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MachineCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecycleMachineId");

                    b.HasIndex("LocationId");

                    b.ToTable("RecycleMachine", (string)null);
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.Region", b =>
                {
                    b.Property<Guid>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RegionId");

                    b.ToTable("Region", (string)null);
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.RewardRule", b =>
                {
                    b.Property<Guid>("RewardRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiftChance")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<Guid>("GiftId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PointRangeMax")
                        .HasColumnType("int");

                    b.Property<int>("PointRangeMin")
                        .HasColumnType("int");

                    b.HasKey("RewardRuleId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("GiftId");

                    b.ToTable("RewardRule", (string)null);
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.Robot", b =>
                {
                    b.Property<Guid>("RobotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BatteryLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastAccessTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RobotName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RobotTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RobotId");

                    b.HasIndex("LocationId");

                    b.HasIndex("RobotTypeId");

                    b.ToTable("Robot", (string)null);
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.RobotType", b =>
                {
                    b.Property<Guid>("RobotTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RobotTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RobotTypeId");

                    b.ToTable("RobotType", (string)null);
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.Transaction", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GiftId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PointsEarned")
                        .HasColumnType("int");

                    b.Property<Guid>("RecycleMachineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RobotId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TransactionId");

                    b.HasIndex("CampaignId")
                        .IsUnique();

                    b.HasIndex("CustomerId");

                    b.HasIndex("GiftId")
                        .IsUnique();

                    b.HasIndex("LocationId")
                        .IsUnique();

                    b.HasIndex("RecycleMachineId")
                        .IsUnique();

                    b.HasIndex("RobotId")
                        .IsUnique();

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.Campaign", b =>
                {
                    b.HasOne("HeinekenRobotAPI.Entities.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.CampaignRobotMachine", b =>
                {
                    b.HasOne("HeinekenRobotAPI.Entities.Campaign", "Campaign")
                        .WithMany("CampaignRobotMachines")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HeinekenRobotAPI.Entities.Location", "Location")
                        .WithMany("CampaignRobotMachines")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HeinekenRobotAPI.Entities.RecycleMachine", "RecycleMachine")
                        .WithMany("CampaignRobotMachines")
                        .HasForeignKey("RecycleMachineId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HeinekenRobotAPI.Entities.Robot", "Robot")
                        .WithMany("CampaignRobotMachines")
                        .HasForeignKey("RobotId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Location");

                    b.Navigation("RecycleMachine");

                    b.Navigation("Robot");
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.GiftRedemption", b =>
                {
                    b.HasOne("HeinekenRobotAPI.Entities.Campaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeinekenRobotAPI.Entities.Gift", "Gift")
                        .WithMany()
                        .HasForeignKey("GiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeinekenRobotAPI.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Gift");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.Location", b =>
                {
                    b.HasOne("HeinekenRobotAPI.Entities.Region", "Region")
                        .WithMany("Locations")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.RecycleMachine", b =>
                {
                    b.HasOne("HeinekenRobotAPI.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.RewardRule", b =>
                {
                    b.HasOne("HeinekenRobotAPI.Entities.Campaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeinekenRobotAPI.Entities.Gift", "Gift")
                        .WithMany()
                        .HasForeignKey("GiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Gift");
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.Robot", b =>
                {
                    b.HasOne("HeinekenRobotAPI.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeinekenRobotAPI.Entities.RobotType", "RobotType")
                        .WithMany("Robots")
                        .HasForeignKey("RobotTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("RobotType");
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.Transaction", b =>
                {
                    b.HasOne("HeinekenRobotAPI.Entities.Campaign", "Campaign")
                        .WithOne()
                        .HasForeignKey("HeinekenRobotAPI.Entities.Transaction", "CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeinekenRobotAPI.Entities.Customer", "Customer")
                        .WithMany("Transactions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HeinekenRobotAPI.Entities.Gift", "Gift")
                        .WithOne()
                        .HasForeignKey("HeinekenRobotAPI.Entities.Transaction", "GiftId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HeinekenRobotAPI.Entities.Location", "Location")
                        .WithOne()
                        .HasForeignKey("HeinekenRobotAPI.Entities.Transaction", "LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeinekenRobotAPI.Entities.RecycleMachine", "RecycleMachine")
                        .WithOne()
                        .HasForeignKey("HeinekenRobotAPI.Entities.Transaction", "RecycleMachineId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HeinekenRobotAPI.Entities.Robot", "Robot")
                        .WithOne()
                        .HasForeignKey("HeinekenRobotAPI.Entities.Transaction", "RobotId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Customer");

                    b.Navigation("Gift");

                    b.Navigation("Location");

                    b.Navigation("RecycleMachine");

                    b.Navigation("Robot");
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.Campaign", b =>
                {
                    b.Navigation("CampaignRobotMachines");
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.Customer", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.Location", b =>
                {
                    b.Navigation("CampaignRobotMachines");
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.RecycleMachine", b =>
                {
                    b.Navigation("CampaignRobotMachines");
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.Region", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.Robot", b =>
                {
                    b.Navigation("CampaignRobotMachines");
                });

            modelBuilder.Entity("HeinekenRobotAPI.Entities.RobotType", b =>
                {
                    b.Navigation("Robots");
                });
#pragma warning restore 612, 618
        }
    }
}
